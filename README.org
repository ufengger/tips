#+TITLE: Working Tips and Tricks
#+AUTHOR: ufengger
* 目录                                                                  :TOC:
- [[#gdb][GDB]]
  - [[#configuration][Configuration]]
  - [[#history-search-with-fzf][History search with fzf]]
  - [[#display-output-of-target-application-in-a-separate-window][Display output of target application in a separate window]]
  - [[#display-artificial-arrays][Display artificial arrays]]
- [[#conda][Conda]]
  - [[#keyboard-keys-not-working-on-urxvt][Keyboard keys not working on URxvt]]

* GDB

** Configuration

可以直接使用 [[https://github.com/gdbinit/Gdbinit]] ，将其命名为 ~.gdbinit~ ，并且新建文件 ~.gdbinit.local~ 。文件 ~.gdbinit.local~ 中的配置将会覆盖 ~.gdbinit~ 中的配置。下面是我的配置：

#+begin_src bash
set $SHOWCPUREGISTERS = 0
set $SHOW_CONTEXT = 0

set history size unlimited
set history remove-duplicates unlimited

# Cause GDB to print structures in an indented format with one member per line
set print pretty on
#+end_src

** History search with fzf

通常来说这是无法办到的，参见 [[https://github.com/junegunn/fzf/issues/1516#issuecomment-472469010][这个 issue]] 。然而，可以按照 [[https://github.com/junegunn/fzf/issues/1516#issuecomment-711792764][这个回答]] 对 GDB 做下小改动，参见项目 [[https://github.com/filipkilibarda/gdb_fzf_patch][gdb_fzf_patch]] 。

#+begin_src bash
mkdir gdb-with-fzf
cd gdb-with-fzf

# clone
git clone https://github.com/filipkilibarda/gdb_fzf_patch

# download gdb
aria2c https://ftp.gnu.org/gnu/gdb/gdb-10.2.tar.xz
tar xvf gdb-10.2.tar.xz
cd gdb-10.2/
git init
git add .
git commit -m "first commit"

# apply the patch
git apply ../gdb_fzf_patch/gdb.patch
git add .
git commit -m "fzf patch"

# build gdb
mkdir build
cd build
../configure --with-python=$(which python) --enable-targets=all
make -j $(nproc)
sudo make install
#+end_src

** Display output of target application in a separate window

该问题来源于 [[https://stackoverflow.com/a/31804225]] 。

+ 打开一个终端（该终端用于输出被调试程序的输出），执行 ~tty~ 命令：
#+begin_src bash
$ tty
/dev/pts/0
#+end_src
+ 打开另一个终端并进入 ~GDB~ ，然后输入：
#+begin_src bash
(gdb) tty /dev/pts/0
(gdb) run
#+end_src

** Display artificial arrays

If a program says

#+begin_src c
int *array = (int *) malloc (len * sizeof (int));
#+end_src

you can print the contents of ~array~ with

#+begin_src bash
(gdb) p *array@len
#+end_src

以上来自 [[https://sourceware.org/gdb/current/onlinedocs/gdb/Arrays.html][官方文档]] ，但是在用 [[https://github.com/gdbinit/Gdbinit][github.com/gdbinit/Gdbinit]] 这个配置时，需要注意 ~@~ 后面的指针长度默认是十六进制，例如若我们想打印长度为 10 的数组，下面的代码：

#+begin_src bash
(gdb) p *array @ 10
#+end_src

会打印出 16 个元素。正确的代码应该是：

#+begin_src bash
(gdb) p *array @ 0x10
#+end_src

或者，

#+begin_src bash
(gdb) p/d *array @ 10
#+end_src

* Conda

** Keyboard keys not working on URxvt

Just manually copy ~/lib/terminfo/r/rxvt-unicode-256color~ to
~$HOME/miniconda3/share/terminfo/r/~, and also to
~$HOME/miniconda3/envs/YOUR_ENVS_NAME/share/terminfo/r/~.
