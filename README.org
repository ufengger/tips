#+TITLE: Working Tips and Tricks
#+AUTHOR: ufengger
* 目录                                                                  :TOC:
- [[#conda][Conda]]
  - [[#keyboard-keys-not-working-on-urxvt][Keyboard keys not working on URxvt]]
- [[#emacs][Emacs]]
  - [[#unfill-paragraph][unfill paragraph]]
- [[#gdb][GDB]]
  - [[#configuration][Configuration]]
  - [[#history-search-with-fzf][History search with fzf]]
  - [[#display-output-of-target-application-in-a-separate-window][Display output of target application in a separate window]]
  - [[#display-artificial-arrays][Display artificial arrays]]
- [[#c-language][C Language]]
  - [[#conversion-from-unsigned-integral-type][Conversion from unsigned integral type]]
- [[#linux][Linux]]
  - [[#how-to-disableenable-touchpad-or-trackpoint][How to disable/enable touchpad or trackpoint?]]
  - [[#how-to-disable-a-pci-device][How to disable a PCI device?]]
  - [[#查看局域网内所有-ip-及其-mac-地址][查看局域网内所有 IP 及其 MAC 地址]]
  - [[#samba-server-on-android][Samba server on Android]]
    - [[#installation][Installation]]
    - [[#configuration-1][Configuration]]
    - [[#start][Start]]
  - [[#scrcpy-on-fedora-40][Scrcpy on Fedora 40]]
- [[#interesting-links][Interesting links]]
  - [[#mathoverflow][mathoverflow]]
  - [[#github][github]]
  - [[#online-courses][Online Courses]]
  - [[#miscellaneous][miscellaneous]]

* Conda

** Keyboard keys not working on URxvt

Just manually copy ~/lib/terminfo/r/rxvt-unicode-256color~ to
~$HOME/miniconda3/share/terminfo/r/~, and also to
~$HOME/miniconda3/envs/YOUR_ENVS_NAME/share/terminfo/r/~.

* Emacs

** unfill paragraph

将文档局部变量 ~fill-column~ 设置为一个非常大的值，例如 ~999999999~ ，然后
~revert-buffer~ ，然后在对应的段落 ~fill-paragraph~ ，即可。

* GDB

** Configuration

可以直接使用 [[https://github.com/gdbinit/Gdbinit]] ，将其命名为 ~.gdbinit~ ，并且新建文件 ~.gdbinit.local~ 。文件 ~.gdbinit.local~ 中的配置将会覆盖 ~.gdbinit~ 中的配置。下面是我的配置：

#+begin_src bash
set $SHOWCPUREGISTERS = 0
set $SHOW_CONTEXT = 0

set history size unlimited
set history remove-duplicates unlimited

# Cause GDB to print structures in an indented format with one member per line
set print pretty on
#+end_src

** History search with fzf

通常来说这是无法办到的，参见 [[https://github.com/junegunn/fzf/issues/1516#issuecomment-472469010][这个 issue]] 。然而，可以按照 [[https://github.com/junegunn/fzf/issues/1516#issuecomment-711792764][这个回答]] 对 GDB 做下小改动，参见项目 [[https://github.com/filipkilibarda/gdb_fzf_patch][gdb_fzf_patch]] 。

#+begin_src bash
mkdir gdb-with-fzf
cd gdb-with-fzf

# clone
git clone https://github.com/filipkilibarda/gdb_fzf_patch

# download gdb
aria2c https://ftp.gnu.org/gnu/gdb/gdb-10.2.tar.xz
tar xvf gdb-10.2.tar.xz
cd gdb-10.2/
git init
git add .
git commit -m "first commit"

# apply the patch
git apply ../gdb_fzf_patch/gdb.patch
git add .
git commit -m "fzf patch"

# build gdb
mkdir build
cd build
../configure --with-python=$(which python) --enable-targets=all
make -j $(nproc)
sudo make install
#+end_src

** Display output of target application in a separate window

该问题来源于 [[https://stackoverflow.com/a/31804225]] 。

+ 打开一个终端（该终端用于输出被调试程序的输出），执行 ~tty~ 命令：
#+begin_src bash
$ tty
/dev/pts/0
#+end_src
+ 打开另一个终端并进入 ~GDB~ ，然后输入：
#+begin_src bash
(gdb) tty /dev/pts/0
(gdb) run
#+end_src

** Display artificial arrays

If a program says

#+begin_src c
int *array = (int *) malloc (len * sizeof (int));
#+end_src

you can print the contents of ~array~ with

#+begin_src bash
(gdb) p *array@len
#+end_src

以上来自 [[https://sourceware.org/gdb/current/onlinedocs/gdb/Arrays.html][官方文档]] ，但是在用 [[https://github.com/gdbinit/Gdbinit][github.com/gdbinit/Gdbinit]] 这个配置时，需要注意 ~@~ 后面的指针长度默认是十六进制，例如若我们想打印长度为 10 的数组，下面的代码：

#+begin_src bash
(gdb) p *array @ 10
#+end_src

会打印出 16 个元素。正确的代码应该是：

#+begin_src bash
(gdb) p *array @ 0x10
#+end_src

或者，

#+begin_src bash
(gdb) p/d *array @ 10
#+end_src

* C Language

** Conversion from unsigned integral type

我发现一个大概是微软文档库中的一个很有用的表格， [[https://github.com/MicrosoftDocs/cpp-docs/blob/main/docs/c-language/conversions-from-unsigned-integral-types.md][无符号整型向其他类型的转换汇总：]]

| From                   | To                     | Method                                                |
|------------------------+------------------------+-------------------------------------------------------|
| *=unsigned char=*      | *=char=*               | Preserve bit pattern; high-order bit becomes sign bit |
| *=unsigned char=*      | *=short=*              | Zero-extend                                           |
| *=unsigned char=*      | *=long=*               | Zero-extend                                           |
| *=unsigned char=*      | *=long long=*          | Zero-extend                                           |
| *=unsigned char=*      | *=unsigned short=*     | Zero-extend                                           |
| *=unsigned char=*      | *=unsigned long=*      | Zero-extend                                           |
| *=unsigned char=*      | *=unsigned long long=* | Zero-extend                                           |
| *=unsigned char=*      | *=float=*              | Convert to *=long=*; convert *=long=* to *=float=*    |
| *=unsigned char=*      | *=double=*             | Convert to *=long=*; convert *=long=* to *=double=*   |
| *=unsigned char=*      | *=long double=*        | Convert to *=long=*; convert *=long=* to *=double=*   |
| *=unsigned short=*     | *=char=*               | Preserve low-order byte                               |
| *=unsigned short=*     | *=short=*              | Preserve bit pattern; high-order bit becomes sign bit |
| *=unsigned short=*     | *=long=*               | Zero-extend                                           |
| *=unsigned short=*     | *=long long=*          | Zero-extend                                           |
| *=unsigned short=*     | *=unsigned char=*      | Preserve low-order byte                               |
| *=unsigned short=*     | *=unsigned long=*      | Zero-extend                                           |
| *=unsigned short=*     | *=unsigned long long=* | Zero-extend                                           |
| *=unsigned short=*     | *=float=*              | Convert to *=long=*; convert *=long=* to *=float=*    |
| *=unsigned short=*     | *=double=*             | Convert to *=long=*; convert *=long=* to *=double=*   |
| *=unsigned short=*     | *=long double=*        | Convert to *=long=*; convert *=long=* to *=double=*   |
| *=unsigned long=*      | *=char=*               | Preserve low-order byte                               |
| *=unsigned long=*      | *=short=*              | Preserve low-order word                               |
| *=unsigned long=*      | *=long=*               | Preserve bit pattern; high-order bit becomes sign bit |
| *=unsigned long=*      | *=long long=*          | Zero-extend                                           |
| *=unsigned long=*      | *=unsigned char=*      | Preserve low-order byte                               |
| *=unsigned long=*      | *=unsigned short=*     | Preserve low-order word                               |
| *=unsigned long=*      | *=unsigned long long=* | Zero-extend                                           |
| *=unsigned long=*      | *=float=*              | Convert to *=long=*; convert *=long=* to *=float=*    |
| *=unsigned long=*      | *=double=*             | Convert directly to *=double=*                        |
| *=unsigned long=*      | *=long double=*        | Convert to *=long=*; convert *=long=* to *=double=*   |
| *=unsigned long long=* | *=char=*               | Preserve low-order byte                               |
| *=unsigned long long=* | *=short=*              | Preserve low-order word                               |
| *=unsigned long long=* | *=long=*               | Preserve low-order dword                              |
| *=unsigned long long=* | *=long long=*          | Preserve bit pattern; high-order bit becomes sign bit |
| *=unsigned long long=* | *=unsigned char=*      | Preserve low-order byte                               |
| *=unsigned long long=* | *=unsigned short=*     | Preserve low-order word                               |
| *=unsigned long long=* | *=unsigned long=*      | Preserve low-order dword                              |
| *=unsigned long long=* | *=float=*              | Convert to *=long=*; convert *=long=* to *=float=*    |
| *=unsigned long long=* | *=double=*             | Convert directly to *=double=*                        |
| *=unsigned long long=* | *=long double=*        | Convert to *=long=*; convert *=long=* to *=double=*   |

* Linux
** How to disable/enable touchpad or trackpoint?
首先可以使用 ~xinput list~ 查看设备名称:

#+BEGIN_SRC bash
⎡ Virtual core pointer                    	id=2	[master pointer  (3)]
⎜   ↳ Virtual core XTEST pointer              	id=4	[slave  pointer  (2)]
⎜   ↳ ELAN067B:00 04F3:31F8 Mouse             	id=9	[slave  pointer  (2)]
⎜   ↳ ELAN067B:00 04F3:31F8 Touchpad          	id=10	[slave  pointer  (2)]
⎜   ↳ TPPS/2 Elan TrackPoint                  	id=14	[slave  pointer  (2)]
⎣ Virtual core keyboard                   	id=3	[master keyboard (2)]
    ↳ Virtual core XTEST keyboard             	id=5	[slave  keyboard (3)]
    ↳ Video Bus                               	id=6	[slave  keyboard (3)]
    ↳ Power Button                            	id=7	[slave  keyboard (3)]
    ↳ Sleep Button                            	id=8	[slave  keyboard (3)]
    ↳ Intel HID events                        	id=12	[slave  keyboard (3)]
    ↳ AT Translated Set 2 keyboard            	id=13	[slave  keyboard (3)]
    ↳ ThinkPad Extra Buttons                  	id=15	[slave  keyboard (3)]
    ↳ sof-hda-dsp Headphone                   	id=11	[slave  keyboard (3)]
#+END_SRC

然后：

#+BEGIN_SRC bash
xinput disable "ELAN067B:00 04F3:31F8 Touchpad"
xinput disable "TPPS/2 Elan TrackPoint"
#+END_SRC

也可以将笔记本电脑的键盘关闭：

#+BEGIN_SRC bash
xinput float 13
#+END_SRC

其中 ~13~ 是 ~AT Translated Set 2 keyboard~ 的 ID。

重新开启：

#+BEGIN_SRC bash
xinput reattach 13 3
#+END_SRC

** How to disable a PCI device?

例如我想禁用无线网卡，则首先用 ~lspci | grep -i wifi~ 查询其 PCI 地址：

#+BEGIN_SRC bash
00:14.3 Network controller: Intel Corporation Alder Lake-P PCH CNVi WiFi (rev 01)
#+END_SRC

然后编写 ~udev rules~ 文件：

#+BEGIN_SRC bash
ACTION=="add", KERNEL=="0000:00:14.3", SUBSYSTEM=="pci", RUN+="/bin/sh -c 'echo 1 > /sys/bus/pci/devices/0000:00:14.3/remove'"
#+END_SRC

将其命名为 ~/etc/udev/rules.d/10-wireless-card.rules~ 即可。

** 查看局域网内所有 IP 及其 MAC 地址

#+BEGIN_SRC bash
sudo arp-scan -I wlan0 -l
#+END_SRC

** Samba server on Android

*** Installation

#+BEGIN_SRC bash
apt install samba
#+END_SRC

*** Configuration

#+BEGIN_SRC bash
[global]
server min protocol = NT1
workgroup = WORKGROUP
security = user

[shared_folder]
path = /data/data/com.termux/files/home/public
public = yes
writable = yes
guest ok = yes
#+END_SRC

*** Start

#+BEGIN_SRC bash
smbd -p 34172 -D
#+END_SRC

** Scrcpy on Fedora 40

#+BEGIN_SRC bash
adb kill-server
sudo adb start-server
scrcpy
#+END_SRC

* Interesting links

** mathoverflow

- [[https://mathoverflow.net/q/94742][Examples of interesting false proofs]]

- [[https://mathoverflow.net/q/281447][Mathematical games interesting to both you and a 5+-year-old child]]

- [[https://mathoverflow.net/q/362326][Why do bees create hexagonal cells ? (Mathematical reasons)]]

- [[https://mathoverflow.net/q/338607][Why doesn't mathematics collapse even though humans quite often make mistakes in their proofs?]]

- [[https://mathoverflow.net/q/5892][What is convolution intuitively?]]

- [[https://mathoverflow.net/q/10014][Applications of the Chinese remainder theorem]]

- [[https://mathoverflow.net/q/65729][What are "perfectoid spaces"?]]

- [[https://mathoverflow.net/q/410798][Ideas for introducing Galois theory to advanced high school students]]

- [[https://mathoverflow.net/q/13526][Geometric interpretation of trace]]

- [[https://mathoverflow.net/questions/10014/applications-of-the-chinese-remainder-theorem][Applications of the Chinese remainder theorem]]

- [[https://mathoverflow.net/q/9754][Magic trick based on deep mathematics]]

- [[https://mathoverflow.net/q/463937][What mathematical problems can be attacked using DeepMind's recent mathematical breakthroughs?]]

- [[https://mathoverflow.net/q/366070][What are the benefits of writing vector inner products as ⟨u,v⟩ as opposed to uTv?]]

- [[https://mathoverflow.net/q/38639][Thinking and Explaining]]

- [[https://mathoverflow.net/q/13638][Which popular games are the most mathematical?]]

** github

- [[https://github.com/kkkgo/KMS_VL_ALL][KMS_VL_ALL - Smart Activation Script]]

** Online Courses

- [[http://cs.brown.edu/courses/csci2420/lectures/][Brown CS242: Probabilistic Graphical Models]]

- [[https://canvas.eee.uci.edu/courses/45797/assignments/syllabus][UCI CS274B: Learning in Graphical Models]]

- [[https://canvas.eee.uci.edu/courses/45799/assignments/syllabus][UCI CS275P: Statistical Learning & Graphical Models]]

- [[https://canvas.eee.uci.edu/courses/38392/assignments/syllabus][UCI CS177: Applications of Probability in Computer Science]]

** miscellaneous

- [[http://www.georgehart.com/bagel/bagel.html][Mathematically Correct Breakfast: How to Slice a Bagel into Two Linked Halves]]
